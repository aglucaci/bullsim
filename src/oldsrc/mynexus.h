#ifndef MYNEXUS_H#define MYNEXUS_H#include <iostream>#include "nexusdefs.h"#include "nexustoken.h"#include "nexus.h"#include "taxablock.h"#include "treesblock.h"#include "discretedatum.h"#include "discretematrix.h"#include "charactersblock.h"#include "allelesblock.h"#include "assumptionsblock.h"#include "datablock.h"#include "distancedatum.h"#include "distancesblock.h"#include "XNexus.h" class MyNexus : public Nexus{	struct NoDataFile { };	public:	     ofstream outf;	     Nexus *parentNexus;		MyNexus(Nexus *pb)	{						parentNexus=pb;						}						bool FileExists( char* fn );		void ExecuteStarting() {parentNexus->ExecuteStarting();}		void ExecuteStopping() {parentNexus->ExecuteStarting();}		void OutputComment( nxsstring s ) {			parentNexus->OutputComment(s);			}		void EnteringBlock( nxsstring blockName ) {			parentNexus->EnteringBlock(blockName);		}				void SkippingBlock( nxsstring blockName ) {			parentNexus->SkippingBlock(blockName);		}				void DebugReportBlock( NexusBlock& nexusBlock ) {         parentNexus->DebugReportBlock(nexusBlock);		}		void NexusError( nxsstring& msg, streampos pos, long line, long col ) {			parentNexus->NexusError(msg, pos, line, col);		}};#endif