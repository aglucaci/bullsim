#include "node.h"#include "displayLines.h"#include <assert.h>#include <iostream.h>#include "nxsstring.h"void horizLine::Display(int *drow,int *dcol,int windowWidth,int displayMode, int firIntArg,  int secIntArg){	assert(*drow==row);	assert(*dcol>=fcol && *dcol<lcol);//verify that initial row and column are in the line	char branchchar;	if(displayMode==branchDisplay(ParsUpPass) && endNode->MustBeAChangeOnBranchUppass(firIntArg))		branchchar='#';	else	branchchar='-';	while(*dcol<lcol)		{cout<<branchchar;		(*dcol)++;		}	nxsstring tn;	if(displayMode==branchDisplay(allNames) || displayMode==branchDisplay(termNames))		tn=endNode->GetName();	else	if(displayMode==branchDisplay(ParsUpPass))		{tn=DecodeState((endNode->GetParsAtt())->GetUpPass(firIntArg),  secIntArg);		if(endNode->IsTerm())			{tn+=" ";			tn+=endNode->GetName();			}		}	else	throw	MTHException("Entered unwritten code Display" );		if(endNode->IsTerm())			{			if(tn.length()>SPACES_FOR_TAXNAME)				for(int k=0;k<SPACES_FOR_TAXNAME;k++)					cout<<tn[k];			else	cout<<tn;			*dcol=windowWidth;//advance as if you're at the end of a line			}	else	if(displayMode==branchDisplay(allNames) || displayMode==branchDisplay(ParsUpPass))				if(tn.length()+(*dcol)<windowWidth-SPACES_FOR_TAXNAME)					{cout<<tn;					(*dcol)+=tn.length();					}				else					{int cutoff=windowWidth-SPACES_FOR_TAXNAME-(*dcol);					for(int k=0;k<cutoff;k++)						cout<<tn[k];					(*dcol)=windowWidth-SPACES_FOR_TAXNAME;					}}